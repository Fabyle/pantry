<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:tx = "http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/batch
	http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd">
    
    <!-- ANNOTATIONS POUR L'INJECTION DE DEPENDANCES -->
	<context:annotation-config />

	<!-- ANNOTATIONS POUR L'injection @Autowired -->
	<context:component-scan base-package="edu.pantry.Pantry_SpringBatch1.ItemWriter" />
    
    <!-- fichier de properties -->
    <context:property-placeholder location="classpath:batch/batch.properties,classpath:batch/jdbc.properties"/>
    
        
    <!-- READER  -->
	<bean id="personneReaderCSV" class="org.springframework.batch.item.file.FlatFileItemReader" >
		<property name="resource" value="${input.file}" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
				<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
					<property name="delimiter" value=","/>
					<property name="names" value="id,nom,prenom,civilite" />
				</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="targetType" value="edu.pantry.mybatis.modelMapper.Personne" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<!-- PROCESSOR -->
	<bean id="personProcessor" class="edu.pantry.Pantry_SpringBatch1.ItemProcessor.PersonProcessor" />

	<!-- WRITER -->
	<bean id="personDaoWriter" class="edu.pantry.Pantry_SpringBatch1.ItemWriter.MyBatisItemWriter" />
	
	
	<!-- JOB LAUNCHER --> 
	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<!-- JOB REPOSITORY --> 
	<!-- <bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
	</bean>-->
	
	
	<bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
         <property name="dataSource" ref="dataSource" />
         <property name="transactionManager" ref="transactionManager"/>
         <property name="databaseType" value="hsql" />
         <property name="tablePrefix" value="BATCH_"/>
         <property name="isolationLevelForCreate" value="ISOLATION_DEFAULT"/>
    </bean>  
	
	
		<!-- Declare a transaction manager -->
	<bean id="transactionManager"
	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource"/>
	</bean>


	<!-- Enable annotation style of managing transactions -->
	<tx:annotation-driven transaction-manager="transactionManager" />

  
  	<!-- define the SqlSessionFactory, notice that configLocation is not needed when you use MapperFactoryBean -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <property name="dataSource" ref="dataSource" />
	    <property name="configLocation" value="mybatis/sqlmap-config.xml" />
	</bean>
  
  
  
  <!-- Data source --> 
    <bean id="dataSource" destroy-method="close" class="com.mchange.v2.c3p0.ComboPooledDataSource">
       <property name="driverClass" value="${app.jdbc.driverClassName}" />
       <property name="jdbcUrl" value="${app.jdbc.url}" />       
       <property name="user" value="${app.jdbc.username}" />
       <property name="password" value="${app.jdbc.password}" />
       <property name="acquireIncrement" value="10" />
       <property name="idleConnectionTestPeriod" value="60" />
       <property name="maxPoolSize" value="100" />
       <property name="maxStatements" value="50" />
       <property name="minPoolSize" value="10" />
   </bean>
   
  
  
  <!-- JOB --> 
	 <job id="importPersonnes"
		xmlns="http://www.springframework.org/schema/batch">
		<step id="readWritePersonne">
			<tasklet> 			
				<chunk reader="personneReaderCSV" writer="personDaoWriter" processor="personProcessor" commit-interval="10" />
			</tasklet>
			<!-- <batch:listeners>
				<batch:listener ref="stepReadWritePersonneListener" />
			</batch:listeners>-->

		</step>
		<!-- <batch:listeners>
				<batch:listener ref="jobPersonneListener" />
		</batch:listeners>-->
	</job>

	<!-- listener de job -->
	<!-- <bean id="jobPersonneListener"	class="edu.pantry.Pantry_SpringBatch1.Listener.JobPersonneListener" />-->

	<!-- listener de step -->
	<!-- <bean id="stepReadWritePersonneListener"	class="edu.pantry.Pantry_SpringBatch1.Listener.StepReadWritePersonneListener" />-->




</beans>